name: Deploy Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip_deploy')"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.os == 'ubuntu-latest' && 'wasm32-unknown-unknown' || '' }}

      - uses: Swatinem/rust-cache@v2

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli

      - name: Install wasm-opt
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y binaryen

      - name: Build Web
        if: matrix.os == 'ubuntu-latest'
        run: dx build --release

      - name: Optimize WASM
        if: matrix.os == 'ubuntu-latest'
        run: |
          wasm-opt -Oz target/wasm32-unknown-unknown/release/Cowcord.wasm -o target/wasm32-unknown-unknown/release/Cowcord-optimized.wasm
          mv target/wasm32-unknown-unknown/release/Cowcord-optimized.wasm target/wasm32-unknown-unknown/release/Cowcord.wasm

      - name: Deploy Web
        if: matrix.os == 'ubuntu-latest'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=target/dx/Cowcord/release/web/public --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_RELEASE }}

      # doing full releases manually is probably better
      - name: Build Desktop
        if: matrix.os == 'windows-latest'
        run: dx bundle --platform desktop --release

      - name: Create Release
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          prerelease: false
          files: dist/*.exe
          body: |
            - Commit: ${{ github.sha }}
            - Built on: ${{ github.event_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
